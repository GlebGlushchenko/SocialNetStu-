{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/yes.png","assets/images/criss-cross.png","components/Profile/Posts/MyPosts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.js","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateUserStatus","onChange","e","currentTarget","autoFocus","Post","className","classes","item","src","avatar","alt","massage","likeCounter","maxLength10","maxLengthCreator","MyPosts","React","memo","posts","postData","map","likesCounter","key","id","postsBlock","PostAddReduxForm","onSubmit","formData","addPost","newPostBady","textarea","Elements","reduxForm","form","handleSubmit","Field","validate","required","name","component","placeholder","ProfileDataFormReduxForm","profile","error","creatorNewField","Input","contacts_wrapper","job_Search","type","JobDescription","contact_link","keys","contacts","Contacts","contactsTitle","contactsValue","contactsLink","target","href","ProfileData","fullName","aboutMe","filter","jobIcon","lookingForAJob","yes","no","lookingForAJobDescription","isOwner","onClick","goToEditMode","ProfileInfo","profileStatusUpdate","Preloader","wrappers","img","about_wrapper","to","userId","photos","large","small","avatar_img","uploadPhotoInput","input","files","savePhoto","onMainPhotoSelected","initialValues","saveProfile","MyPostsContainer","connect","state","profilePage","newPostText","Profile","profileWrapper","hr","ProfileContainer","refreshProfile","match","params","history","getUserProfile","getUsersStatus","this","prevProps","prevState","snapshot","updateUsersStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.bf2a68a1.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1yU8P\",\"jobIcon\":\"ProfileInfo_jobIcon__1DMom\",\"job_Search\":\"ProfileInfo_job_Search__1MzFH\",\"JobDescription\":\"ProfileInfo_JobDescription__1R628\",\"avatar_img\":\"ProfileInfo_avatar_img__6uIBr\",\"contactsLink\":\"ProfileInfo_contactsLink__2McUf\",\"error\":\"ProfileInfo_error__1NZ9m\"};","module.exports = __webpack_public_path__ + \"static/media/yes.1b59cc9e.png\";","module.exports = __webpack_public_path__ + \"static/media/criss-cross.dc8a2982.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__3sfIt\",\"postsBlock\":\"MyPosts_postsBlock__32rE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1liPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__29WII\",\"hr\":\"Profile_hr__3--F1\",\"profileWrapper\":\"Profile_profileWrapper__3ZtdR\"};","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHook = (props) =>{\n    const [editMode,setEditMode] = useState(false)\n    const [status,setStatus] = useState(props.status)\n\n    const activateEditMobe =()=>{\n       setEditMode(true)\n    }\n    const deactivateEditMode =()=>{\n        setEditMode(false)\n        props.updateUserStatus(status)\n    }\n    const onStatusChange =(e)=>{\n        setStatus(e.currentTarget.value)\n    }\n    useEffect(()=>{\n        setStatus(props.status)\n    },[props.status])\n\n        return (\n            <div>\n                {!editMode &&\n                    <div>\n                        <span onDoubleClick={activateEditMobe} >{props.status || '---------'}</span>\n                    </div>\n                }\n                {editMode &&\n                    <div>\n                        <input onBlur={deactivateEditMode} onChange={onStatusChange} autoFocus={true} value={status}/>\n                    </div>\n                }\n            </div>\n        )\n}\n\nexport default ProfileStatusWithHook","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\n\r\n\r\nconst Post = (props)=>{\r\n\r\n\r\n    return(\r\n        <div className={classes.item}>\r\n            <img src={props.avatar} alt=\"\"/>\r\n            {props.massage}\r\n            <div>\r\n                <span>\r\n                    <button>like</button>\r\n                </span>\r\n                <span > {props.likeCounter}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Post;\r\n\r\n// {props.likeCounter}","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utilite/validator';\r\nimport {Elements} from '../../common/FormControls/FormControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let posts = props.postData.map(postData => <Post massage={postData.massage} likeCounter={postData.likesCounter} avatar={postData.avatar} key={postData.id}/>)\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.newPostBady)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.postsBlock}>\r\n            <h1>My Posts</h1>\r\n            <h2>New post</h2>\r\n            <PostAddReduxForm onSubmit={onSubmit}/>\r\n            <div className={classes.item}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport const textarea = Elements('textarea')\r\n\r\nconst AddPostForm =(props)=>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required,maxLength10]} name={'newPostBady'} component={textarea} placeholder={'Enter you new post...'}></Field>\r\n            </div>\r\n            <div>\r\n                <button>Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst PostAddReduxForm = reduxForm({form:'addPost'} )(AddPostForm)\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport {creatorNewField} from '../../common/FormControls/FormControls';\r\nimport {Input} from '../../Login/Login';\r\nimport {reduxForm} from 'redux-form';\r\nimport {textarea} from '../Posts/MyPosts';\r\n\r\n\r\nconst ProfileDataForm =({handleSubmit,profile,error})=>{\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <h2>Full name : {creatorNewField(\"Full-name\",'fullName', [],Input)}</h2>\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me :</b>\r\n                {creatorNewField(\"About me\",'aboutMe', [],textarea)}\r\n            </div>\r\n\r\n            <div className={classes.contacts_wrapper}>\r\n                <div className={classes.job_Search}>\r\n                    <b>Поиск работы:</b>\r\n                    {creatorNewField(\"\",'lookingForAJob', [],Input ,{type:'checkbox'})}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <span className={classes.JobDescription}>Комментарий к сатаусу поиска работы : </span>\r\n                {creatorNewField(\"Комментарий\",'lookingForAJobDescription', [],textarea)}\r\n            </div>\r\n            <div>\r\n\r\n            <div className={classes.contact_link}>\r\n                <div><b>Contacts :</b></div>\r\n                {\r\n                    Object.keys(profile.contacts).map(key=>{\r\n                        return <div key={key.id}><b>{key}</b>{creatorNewField(key,'contacts.' + key,[],Input)}</div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n                <button>save</button>\r\n            </div>\r\n                {error && <div className={classes.error}>\r\n                <div>{error}</div>\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form:'ProfileEditForm'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useEffect, useState} from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport yes from '../../../assets/images/yes.png'\nimport no from '../../../assets/images/criss-cross.png'\nimport {NavLink} from 'react-router-dom';\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = (props)=>{\n    const [editMode,setEditMode] = useState(false)\n    const defaultAvatar ='https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png'\n    const bg ='https://www.glimmernet.com/wp-content/uploads/2019/01/network-dark-bg-02.jpg'\n\n    useEffect(()=>{\n            if(props.profileStatusUpdate === 'success'){\n                setEditMode(false)\n            }\n\n    },[props.profileStatusUpdate])\n\n    if(!props.profile){\n        return (\n            <Preloader />\n        )\n    }\n    const onMainPhotoSelected =(e)=>{\n        if(e.target.files.length){\n            props.savePhoto(e.target.files[0])\n        }\n    }\n\n\n    const onSubmit = (formData) => {\n        props.saveProfile(formData)\n\n    }\n\n    return(\n        <div>\n            <div className={classes.wrappers}>\n                <img className={classes.img} src= {bg} alt=\"\"/>\n                 <div className={classes.about_wrapper}>\n                     <div>\n                         <NavLink to={`/profile/${props.profile.userId}`}><img className={!props.profile.photos.large || !props.profile.photos.small ? classes.avatar_img:null} src={props.profile.photos.large || defaultAvatar} alt=\"\"/></NavLink>\n                     </div>\n                     <div className={classes.uploadPhotoInput}>{props.isOwner && <input className={classes.input} onChange={(e)=>{onMainPhotoSelected(e)}} type={'file'}/> }</div>\n                     {editMode\n                         ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile} />\n                         :<ProfileData status={props.status} updateUserStatus={props.updateUserStatus} profile={props.profile} isOwner={props.isOwner} goToEditMode={()=>{setEditMode(true)}}/>}\n\n                 </div>\n            </div>\n        </div>\n    )\n\n}\n\nconst Contacts =({contactsTitle,contactsValue})=>{\n    return <div className={classes.contactsLink}><b>{contactsTitle} : </b><a target={'_blank'} href={contactsValue}>{contactsValue}</a></div>\n}\n\nconst ProfileData =(props)=>{\n    return(\n        <div>\n            <div>\n                <h2>{props.profile.fullName}</h2>\n            </div>\n\n            <div>\n                <ProfileStatusWithHook status={props.status} updateUserStatus={props.updateUserStatus}/>\n            </div>\n\n            <div>\n                <p>{!props.profile.aboutMe?`Lorem Ipsum`:props.profile.aboutMe}</p>\n            </div>\n\n            <div className={classes.contacts_wrapper}>\n                {}\n                <div className={classes.contact_link}>\n                    <div><b>Contacts</b></div>\n                    {\n                        Object.keys(props.profile.contacts).filter(key => props.profile.contacts[key] !== null).map(key=>{\n                            return <Contacts key={key} contactsTitle={key} contactsValue={props.profile.contacts[key]} />\n                        })\n                    }\n                </div>\n                <div className={classes.job_Search}>\n                    <b>Поиск работы:</b>\n                    <img className={classes.jobIcon} src={props.profile.lookingForAJob ? yes:no} alt=\"\"/>\n                </div>\n            </div>\n\n\n            <div>\n                {props.profile.lookingForAJob ?<span className={classes.JobDescription}>Комментарий к сатаусу поиска работы : </span>:null}\n                <span>{!props.profile.lookingForAJobDescription || props.profile.lookingForAJobDescription}</span>\n            </div>\n                {props.isOwner&& <div><button onClick={props.goToEditMode}>edit</button></div>}\n        </div>\n    )\n}\n\n\n\n\n\nexport default ProfileInfo","import React from 'react';\r\nimport {addPost} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost})(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer\r\n\r\n\r\n\r\n","import React from \"react\";\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './Posts/MyPostsContainer';\nimport classes from './Profile.module.css'\n\n\nconst Profile = ({profile,status,updateUserStatus,isOwner,savePhoto,saveProfile,profileStatusUpdate}) => {\n\n    return (\n        <div className={classes.profileWrapper}>\n            <ProfileInfo profileStatusUpdate={profileStatusUpdate} saveProfile={saveProfile} savePhoto={savePhoto} isOwner={isOwner} profile={profile} status={status} updateUserStatus={updateUserStatus}/>\n                <hr className={classes.hr}/>\n            <MyPostsContainer/>\n        </div>)\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {\n    getUserProfile,\n    getUsersStatus,\n    savePhoto,\n    saveProfile,\n    updateUsersStatus\n} from '../../redux/profile-reducer';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\n\nclass ProfileContainer extends React.Component{\n\n    refreshProfile =()=>{\n        let userId = this.props.match.params.userId\n        if(!userId) {\n            userId = this.props.id\n            if(!userId){\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getUsersStatus(userId)\n    }\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.match.params.userId != prevProps.match.params.userId  ){\n            this.refreshProfile()\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div>\n               <Profile {...this.props} saveProfile={this.props.saveProfile} savePhoto={this.props.savePhoto} profile={this.props.profile} status={this.props.status} profileStatusUpdate={this.props.profileStatusUpdate} updateUserStatus={this.props.updateUsersStatus} isOwner={!this.props.match.params.userId}/>\n            </div>)\n    }\n};\n\nlet mapStateToProps = (state)=>({\n    profile:state.profilePage.profile,\n    id:state.auth.id,\n    isAuth:state.auth.isAuth,\n    status:state.profilePage.status,\n    profileStatusUpdate:state.profilePage.profileStatusUpdate\n\n})\n\nexport default compose(\n    connect(mapStateToProps,{getUserProfile,getUsersStatus,updateUsersStatus,savePhoto,saveProfile}),\n    withRouter\n)(ProfileContainer)\n\n\n"],"sourceRoot":""}