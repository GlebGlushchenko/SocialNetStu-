{"version":3,"sources":["hoc/withAuthRedirect.js","components/Nav/Nav.module.css","components/Login/Login.jsx","redux/dialog-reducer.js","utilite/helpers/object-helper.js","redux/users-reducer.js","api/api.js","redux/auth-reducer.js","serviceWorker.js","components/Nav/Nav.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Nav/Friends/FriendsItem/FriendsItem.jsx","components/Nav/Friends/Friends.jsx","components/Nav/Friends/FriendsContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/side-bar-reducer.js","redux/redux-store.js","components/common/Preloader/LoaderComponent.js","components/common/404/NotFound404.jsx","App.js","index.js","components/common/FormControls/FormControls.js","components/Header/Header.module.css","components/common/FormControls/FormControls.module.css","utilite/validator.js","components/Nav/Friends/FriendsItem/FriendsItem.module.css","components/Nav/Friends/Friends.module.css","components/Login/Login.module.css","components/common/Preloader/Preloader.module.css","components/common/Preloader/LoaderComponent.module.css","components/common/Preloader/Preloader.jsx","redux/profile-reducer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Input","Elements","LoginReduxForm","reduxForm","form","handleSubmit","error","captcha_url","className","classes","onSubmit","creatorNewField","required","type","src","alt","login","formData","email","password","rememberMe","captcha","ADD_MASSAGE","initialState","dialogData","name","id","avatar","massageData","massage","addMassageActionCreator","newMassage","dialogReducer","action","updateObjectInArray","item","itemId","objectPropertyName","newObjectProperty","map","user","FOLLOW","UNFOLLOW","SET_USERS","CURRENT_PAGE","users","pageSize","totalItemsCount","currentPage","isFetching","followingIsProgress","portionSize","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingIsProgress","getUsers","dispatch","a","userAPI","data","items","totalCount","followAndUnfollow","apiMethod","actionCreator","resultCode","follow","followAPI","postFollow","bind","unFollow","deleteFolllow","usersReducer","followed","filter","instance","axios","baseURL","withCredentials","headers","get","then","response","delete","post","authAPI","requestAuth","logout","profileAPI","getProfile","getStatus","updataStatus","status","put","savePhoto","filePhoto","FormData","append","saveProfile","securityAPI","getCaptchaURl","avatarLogin","setUserData","getAuthUserData","getCaptchaUrl","message","messages","length","stopSubmit","_error","captchaUrl","url","authReducer","Boolean","window","location","hostname","match","Nav","nav","activeClassName","active","link","News","Music","Settings","FriendsItem","img","Friends","friends","sideBar","friendsData","f","title","compose","Header","header","logo","loginBlock","onClick","HeaderContainer","initialized","appReducer","bestFreinds","sideBarReducer","reducers","combineReducers","dialogPage","profilePage","profileReducer","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","__store__","LoaderComponent","loaderWrapper","lds_facebook","NotFound404","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializedApp","fallback","path","render","component","FriendsContainer","Login","from","Preloader","AppContainer","withRouter","SamuraiJSApp","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","input","meta","hasError","touched","formControl","formConroleIntut","formErrar","placeholder","validate","text","value","maxLengthCreator","maxLength","das","lds_roller","ADD_POST","SET_USERS_PROFILE","GET_USER_STATUS","DELET_POST","SAVE_PROFILE","profile","profileStatusUpdate","postData","likesCounter","addPost","newPostBody","setUsersStatus","savePhotoSuccess","photo","saveProfileSuccess","statusUpdate","getUserProfile","getUsersStatus","updateUsersStatus","photos","getState","Promise","reject","body","p","postId"],"mappings":"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","file":"static/js/main.287176d0.chunk.js","sourcesContent":["import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state)=>{\n    return{\n        isAuth:state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect= (Component)=>{\n    class RedirectComponent extends React.Component {\n        render(){\n            if(!this.props.isAuth){\n                return <Redirect to='/login' />\n            }\n            return <Component {...this.props} />\n        }\n    }\n\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__20BX4\",\"item\":\"Nav_item__7WvM1\",\"link\":\"Nav_link__2-ntf\",\"active\":\"Nav_active__1ZU6M\",\"fridnsSideBar\":\"Nav_fridnsSideBar__3jQuc\",\"bestFriends\":\"Nav_bestFriends__3F6qO\"};","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {creatorNewField, Elements} from '../common/FormControls/FormControls';\nimport {required} from '../../utilite/validator';\nimport {connect} from 'react-redux';\nimport {login} from '../../redux/auth-reducer';\nimport {Redirect} from 'react-router-dom';\nimport classes from './Login.module.css'\n\n\nexport const Input = Elements('input')\n\nconst LoginForm =({handleSubmit,error,captcha_url})=>{\n\n    return(\n        <form className={classes.form} onSubmit={handleSubmit}>\n            <div>\n                {creatorNewField(\"Email\",\"email\",[required],Input,{type:'email'})}\n                {creatorNewField(\"Password\",\"password\",[required],Input,{type:'password'})}\n                {creatorNewField(null,'rememberMe',null,Input,{type:'checkbox'},'Remember me')}\n                <div>\n                    <button>Login</button>\n                </div>\n            </div>\n            {captcha_url\n            && <div>\n                <img src={captcha_url} alt=\"\"/>\n                {creatorNewField('','captcha',[],Input)}\n            </div>}\n\n            {error && <div className={classes.error}>\n                <div>{error}</div>\n            </div>}\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm)\n\nconst Login = (props)=>{\n    const onSubmit = (formData) => {\n        let {email,password,rememberMe,captcha} = formData\n        props.login(email,password,rememberMe,captcha)\n\n    }\n    if(props.auth){\n        return <Redirect to={'/profile'}/>\n    }\n    return(\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm captcha_url={props.captcha_url} onSubmit={onSubmit} />\n            {}\n        </div>\n    )\n}\nlet mapStateToProps =(state)=>{\n    return{\n        auth:state.auth.isAuth,\n        captcha_url:state.auth.captcha_url\n    }\n\n}\n\nexport default connect(mapStateToProps,{login})(Login)","const ADD_MASSAGE = 'network/dialog/ADD-MASSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogData: [\r\n        {name: 'Vova', id: '1', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png'},\r\n        {name: 'Andrey', id: '2', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png'},\r\n        {name: 'Max', id: '3', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png'},\r\n        {name: 'Gleb', id: '4', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png'},\r\n        {name: 'Natasha', id: '5', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png'},\r\n        {name: 'Tolik', id: '6', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-367-456319.png'},\r\n        {name: 'Gosha', id: '7', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png'}\r\n    ],\r\n    massageData: [\r\n        {massage: 'Hi', id: '1', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png'},\r\n        {massage: 'How is youre', id: '2', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png'},\r\n        {massage: 'Bay!!', id: '3', avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png'},\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_MASSAGE:\r\n            return {...state, massageData: [...state.massageData,{massage: action.newMassage, id: '0', avatar: \"https://cdn.iconscout.com/icon/free/png-512/avatar-367-456319.png\"}]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addMassageActionCreator = (newMassage) => ({type: ADD_MASSAGE,newMassage})\r\n\r\nexport default dialogReducer","export const updateObjectInArray = (item,itemId,objectPropertyName,newObjectProperty)=>{\r\n    return  item.map(user => {\r\n        if (user[objectPropertyName] === itemId) {\r\n            return {...user, ...newObjectProperty}\r\n        }\r\n        return user\r\n    })\r\n}\r\n\r\n\r\n","import {followAPI, userAPI} from '../api/api';\nimport {updateObjectInArray} from '../utilite/helpers/object-helper';\n//Вынос в константу значения для type у экшина просто удобнее и меньше шансов ошибиться\nconst FOLLOW = 'network/users/FOLLOW';\nconst UNFOLLOW = 'network/users/UNFOLLOW';\nconst SET_USERS = 'network/users/SET-USERS';\nconst CURRENT_PAGE = 'network/users/CURRENT-PAGE';\nconst TOTAL_USERS_COUNT = 'network/users/TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'network/users/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLOOWING_PROGRESS = 'network/users/TOGGLE_IS_FOLOOWING_PROGRESS';\n\n\n// Инициализируем дефолтное значение для стейта\nlet initialState = {\n    users: [],\n    user: 0,\n    pageSize: 10 ,\n    totalItemsCount: 0,\n    currentPage:1,\n    isFetching:true,\n    followingIsProgress:[],\n    portionSize: 10\n\n}\n    // Создаём Reducer в который передаём наш дефолтный стейт и экшины\nconst usersReducer = (state = initialState, action) => {\n    // switch это то же if else\n    switch (action.type) {\n        // если в в экшине type рашен FOLLOW то мы попадаем сюда \\/\n        case FOLLOW:\n            return {\n                ...state,\n                users:updateObjectInArray(state.users,action.userId,'id',{followed:true})\n            }\n                // То же самое что и с Follow только меняем followed на false\n        case UNFOLLOW:\n            return {\n                ...state,\n               users: updateObjectInArray(state.users,action.userId,'id', {followed:false})\n            }\n        case SET_USERS:\n            // копируем state и пушим в массив users новых юзеров которые нам пришли в экшине\n            return {...state, users: action.users}\n\n        case CURRENT_PAGE:\n            // копируем state и изменяем значение currentPage на то что нам пришло в экшине\n            return {...state,currentPage: action.currentPage}\n\n        case TOTAL_USERS_COUNT:\n            // копируем state и меняем значение которое пришло к нам в экшине + костыль делим это значение на 100 ибо там 5к пользователей а UI у нас не готов к этому\n            return {...state,totalItemsCount: action.totalItemsCount}\n\n        case TOGGLE_IS_FETCHING:\n            // копируем state и записываем новое значение из экшbна\n            return {...state, isFetching: action.isFetching}\n\n        case TOGGLE_IS_FOLOOWING_PROGRESS:\n            // возвращяем копию state\n            return {...state,\n                // пушим в массив значение из экшина с проверкой если action.isFetching true то тогда\n                followingIsProgress:  action.isFetching\n                    // то тогда в массив followingIsProgress записываем id из экшина\n                    ? [state.followingIsProgress,action.id]\n                        // иначе применяем метод filter для массива followingIsProgress и говорим если эелемент массива не равен той id которая нам пришла в экшине то его не нужно копирывать\n                        // filter делает копию массива с условием тоесть если условие условие верно то элемент проходит дальше если не то его копия не создасться\n                    : state.followingIsProgress.filter(id => id !== action.id)\n            }\n                //  и по дефолту мы возвращяем стейт если там не чего не поменялось и не один кейс не сработал т.е. стейт не изменился и мы вернули страый стейт и его не нужно отрисовывать зоного\n        default:\n            return state\n    }\n}\n// создаём экшин ериэйтор ЭКШИН это обьет у которого есть как минимум свойство type тут мы просто создаём его\n//  в Reducer пападает не экшин криэйтор а производное от него т.е экшин с type который уже будет прогоняться по switch\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: CURRENT_PAGE,currentPage})\nexport const totalItemsCount = (totalItemsCount) => ({type: TOTAL_USERS_COUNT,totalItemsCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING,isFetching} )\nexport const toggleIsFollowingIsProgress = (isFetching,id) => ({type: TOGGLE_IS_FOLOOWING_PROGRESS,isFetching,id} )\n// Thunk Creator ему можно передать значение в параметры а обычной санке нет обычная санка просто принемает диспатч для это го мы и делаем для неё обёртку\nexport const getUsers =(currentPage,pageSize)=> {\n    // Сама санка Thunk\n    return async(dispatch) =>{\n        // Thunk диспачит экшин криэйторы с нужны ми им значениями\n        // не мы руками вызываем диспатч а санка тоесть там где нужно мы вызовем санку и она уже будет дичпатчить акшин криэёторы\n        dispatch(setCurrentPage(currentPage))\n        dispatch(toggleIsFetching(true))\n        let data = await userAPI.getUsers(currentPage,pageSize)\n        dispatch(setUsers(data.items))\n        dispatch(totalItemsCount(data.totalCount))\n        dispatch(toggleIsFetching(false))\n\n    }\n}\n\n// ==Общий метод сокрощяет код избавляет от дублирования кода\n// Определяем функцию и ждём что бы к нам в параметры передали то что мы хотим использовать внутри себя\n//Это Thunk Creator\nconst followAndUnfollow = async (dispatch,userId,apiMethod,actionCreator)=>{\n    // Вот это уже Thunk\n    //Диспачим Экшин креэйтор и передаём значение в параметры\n    dispatch(toggleIsFollowingIsProgress(true, userId))\n    //axios запросс вернёт нам промис мы его схватим и помести в data await говорит нам о то что мы будем ждать пока наш асинхронный запрос выполнить и после этого пойдём ниже\n    let data =await apiMethod(userId)\n    //Тут мы проверяем что в ответе с сервера код равен 0 т.е всё хорошо\n    if (data.resultCode === 0) {\n        // и если условие верно то мы диспачим акшин креэйтор и передаём в него значение userID то которое он ждёт от нас\n        dispatch(actionCreator(userId))\n    }\n    //Так же диспатч акшин криэйтора и передача в него значения который он ждёт\n    dispatch(toggleIsFollowingIsProgress(false, userId))\n}\n\n// Thunk Creator\nexport const follow =(userId)=> {\n    //Thunk Санка\n    return async (dispatch) => {\n        // Вызов этой функции и передача в неё значений которые ей нужны\n        followAndUnfollow(dispatch,userId,followAPI.postFollow.bind(userId),followSuccess)\n    }\n}\n\n// Thunk Creator\nexport const unFollow=(userId)=>{\n    //Thunk Санка\n    return async(dispatch)=>{\n        // Вызов этой функции и передача в неё значений которые ей нужны\n        followAndUnfollow(dispatch,userId,followAPI.deleteFolllow.bind(userId),unfollowSuccess)\n    }\n}\n// Экспорт без привязки к имени т.е. имя при импорте может быть любое главное что бы путь был верный Осторожно!!!!!!\nexport default usersReducer\n","import * as axios from 'axios';\n\nconst instance= axios.create({\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials:true,\n    headers:{\n        'API-KEY': '93f42b4f-f61d-4a66-8bea-68ef966acb3e'\n    }\n\n})\n\nexport  const userAPI = {\n    getUsers(currentPage,pageSize){\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response =>{\n            return response.data\n            })\n    }\n}\n\nexport  const followAPI ={\n    deleteFolllow(id){\n        return instance.delete(`follow/${id}`)\n            .then(response=>{\n                return response.data\n            })\n    },\n\n    postFollow(id){\n        return instance.post(`follow/${id}`)\n            .then(response=>{\n                return response.data\n            })\n    }\n\n}\n\nexport const authAPI ={\n    requestAuth(){\n        return instance.get('auth/me')\n    },\n    login(email,password,rememberMe=false,captcha=null){\n        return instance.post('auth/login',{email,password,rememberMe,captcha})\n    },\n    logout(){\n        return instance.delete('auth/login')\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId){\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId){\n        return instance.get(`profile/status/${userId}`)\n    },\n    updataStatus(status){\n        return instance.put('profile/status',{\n            status:status\n        })\n    },\n\n    savePhoto(filePhoto){\n        const formData = new FormData()\n        formData.append('image',filePhoto)\n        return instance.put('profile/photo',formData,{\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n\n    saveProfile(formData){\n        return instance.put('profile/',formData)\n    }\n}\n\nexport const securityAPI ={\n    getCaptchaURl(){\n        return instance.get('security/get-captcha-url')\n    }\n}\n\n\n","import {authAPI, securityAPI} from '../api/api';\nimport {stopSubmit} from 'redux-form';\n\nconst SET_USERS_DATA = 'network/auth/SET_USERS_DATA'\nconst SET_USERS_AVATAR = 'SET_USERS_AVATAR'\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL'\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth:false,\n    avatarLogin:null,\n    captcha_url:null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USERS_DATA:\n            return{\n                ...state,\n                ...action.data\n            }\n        case SET_USERS_AVATAR:\n            return {\n                ...state,\n                avatarLogin: action.avatar\n            }\n        case GET_CAPTCHA_URL:\n            return {\n                ...state,\n                captcha_url:action.url\n\n            }\n\n        default:\n            return state\n    }\n}\nexport const setUserData = (login,email,id,isAuth) =>({type:SET_USERS_DATA,data:{id,email,login,isAuth}})\nexport const setUserAvatar = (avatar) =>({type:SET_USERS_AVATAR,avatar})\nexport const getCaptchaUrlSuccess = (url) =>({type:GET_CAPTCHA_URL,url})\nexport const getAuthUserData=()=> async(dispatch)=>{\n    let response = await authAPI.requestAuth()\n        if(response.data.resultCode === 0){\n            let {id,login,email} = response.data.data\n            dispatch(setUserData(login,email,id,true))\n        }\n}\nexport const login = (email,password,rememberMe,captcha) => async(dispatch) => {\n    let response = await authAPI.login(email,password,rememberMe,captcha)\n        if(response.data.resultCode === 0){\n            dispatch(getAuthUserData())\n        }else {\n            if(response.data.resultCode === 10){\n                dispatch(getCaptchaUrl())\n            }\n            let message =response.data.messages.length > 0 ? response.data.messages[0]:'Some error'\n            dispatch(stopSubmit('login',{_error:message}))\n        }\n}\nexport const getCaptchaUrl = () => async(dispatch) => {\n    let response = await securityAPI.getCaptchaURl()\n    const captchaUrl = response.data.url\n       dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\nexport const logout =()=> async(dispatch)=>{\n    let response = await authAPI.logout()\n        if(response.data.resultCode === 0){\n            dispatch(setUserData(null,null,null,false))\n        }\n}\n\nexport default authReducer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport classes from './Nav.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n// import Friends from './Friends/Friends';\r\n// import FriendsItem from './Friends/FriendsItem/Friends';\r\n\r\n\r\n\r\nconst Nav = (props) => {\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} className={classes.link} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} className={classes.link} to=\"/dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} className={classes.link} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} className={classes.link} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} className={classes.link} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} className={classes.link} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.active} className={classes.link} to=\"/fridends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst  News = (props)=>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst  Music = (props)=>{\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst  Settings = (props)=>{\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react';\r\nimport classes from './FriendsItem.module.css'\r\n\r\nconst FriendsItem =(props)=>{\r\n\r\n    return(\r\n        <div>\r\n            <img className={classes.img} src={props.avatar} alt=\"\"/>\r\n            <div className={classes.name}>{props.name}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FriendsItem;","import React from 'react';\r\nimport classes from './Friends.module.css';\r\nimport FriendsItem from './FriendsItem/FriendsItem';\r\n\r\nconst Friends = (props)=>{\r\n\r\n    let friends = props.sideBar.friendsData.map(f => <FriendsItem avatar={f.avatar} name={f.name} />)\r\n\r\n    return(\r\n        <div className={classes.friends}>\r\n            <h2 className={classes.title}>Friends</h2>\r\n            <div>\r\n                {friends}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Friends;","import React from 'react';\nimport FriendsItem from './FriendsItem/FriendsItem';\nimport Friends from './Friends';\n\nimport {connect} from 'react-redux';\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\n// const FriendsContainer = (props)=>{\n//\n//     return(\n//         <StoreContext.Consumer>\n//             {\n//             (store)=>{\n//                 let sideBar = store.getState().sideBar\n//                 return <Friends  sideBar={sideBar}/>\n//             }\n//         }</StoreContext.Consumer>\n//\n//\n//     )\n// };\n\nlet mapStateToProps = (state)=>{\n    return{\n        sideBar:state.sideBar\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    withAuthRedirect\n)(Friends);","import React from \"react\";\nimport classes from './Header.module.css'\nimport {NavLink} from 'react-router-dom';\n\n\nconst Header = (props) => {\n    return (\n        <header className={classes.header}>\n            <img className={classes.logo} src=\"https://static1.squarespace.com/static/5af39f2c2714e58851ccdf86/t/5b16a69f70a6ad59dcdc12f8/1528211106919/heart-logo.png?format=1500w\" alt=\"\"/>\n            <div className={classes.loginBlock}>\n                {/*<img className={classes.loginAvata} src={!props.id?null:props.avatarLogin} alt=\"\"/>*/}\n                {props.isAuth\n                    ? <p>{props.login}-<button onClick={props.logout}>logOut</button> </p>\n                    :<NavLink className={classes.link} to='/login'>Login</NavLink>}\n            </div>\n        </header>)\n};\nexport default Header;","import React from \"react\";\nimport Header from './Header';\nimport {connect} from 'react-redux';\nimport {logout} from '../../redux/auth-reducer';\n\n\n\nclass HeaderContainer extends React.Component{\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nlet mapStateToProps =(state)=>{\n    return{\n        isAuth:state.auth.isAuth,\n        login:state.auth.login,\n        avatarLogin:state.auth.avatarLogin,\n\n    }\n}\nexport default connect (mapStateToProps,{logout})(HeaderContainer);\n","\nimport {getAuthUserData} from './auth-reducer';\n\nconst INITIALIZED_SUCCESS= 'INITIALIZED_SUCCESS'\n\n\nlet initialState = {\n    initialized: false\n\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return{\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state\n    }\n}\nexport const initializedSuccess = () =>({type:INITIALIZED_SUCCESS})\n\nexport const initializedApp=()=> async (dispatch)=>{\n            await dispatch(getAuthUserData())\n             dispatch(initializedSuccess())\n}\n\n\nexport default appReducer\n","let initialState = {\r\n    friendsData:[\r\n        {avatar:'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png',name:'Alex'},\r\n        {avatar:'https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png',name:'Gleb'},\r\n        {avatar:'https://cdn.iconscout.com/icon/free/png-512/avatar-367-456319.png',name:'Oleg'}\r\n\r\n    ],\r\n    bestFreinds:[\r\n        {avatar:'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png',name:'Alex'},\r\n        {avatar:'https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png',name:'Gleb'},\r\n        {avatar:'https://cdn.iconscout.com/icon/free/png-512/avatar-367-456319.png',name:'Oleg'}\r\n\r\n    ]\r\n}\r\n\r\nconst sideBarReducer = (state = initialState,action) =>{\r\n    return state\r\n}\r\n\r\nexport default sideBarReducer","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport dialogReducer from './dialog-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport sideBarReducer from './side-bar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunk from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    dialogPage:dialogReducer,\r\n    profilePage:profileReducer,\r\n    sideBar:sideBarReducer,\r\n    usersPage:usersReducer,\r\n    auth:authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)))\r\n\r\n// let store = createStore(reducers,applyMiddleware(thunk))\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react';\r\nimport classes from './LoaderComponent.module.css'\r\n\r\nexport const LoaderComponent = ()=>{\r\n    return(\r\n        <div className={classes.loaderWrapper}>\r\n        <div className={classes.lds_facebook}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const NotFound404 =()=>{\r\n    return(\r\n        <div>\r\n            <h1><b>404 NOT FOUND</b></h1>\r\n        </div>\r\n    )\r\n}","import React, {Suspense} from 'react';\nimport './App.css';\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport Nav from './components/Nav/Nav.jsx';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport FriendsContainer from './components/Nav/Friends/FriendsContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login'\nimport {connect, Provider} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializedApp} from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport {LoaderComponent} from './components/common/Preloader/LoaderComponent';\nimport {NotFound404} from './components/common/404/NotFound404';\n\nconst DialogsContainer =React.lazy(()=>import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer =React.lazy(()=>import('./components/Profile/ProfileContainer'))\nconst UsersContainer =React.lazy(()=>import('./components/Users/UsersContainer'))\n\n\nclass App extends React.Component{\n    componentDidMount() {\n        this.props.initializedApp()\n    }\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader />\n        }\n\n        return (\n            <Suspense fallback={<LoaderComponent />}>\n                <div className='container'>\n                    <div className='app__wrapper'>\n                        <HeaderContainer/>\n                        <Nav/>\n                            <div className='app__wrapper-content'>\n                                <Switch>\n                                    <Route path='/profile/:userId?' render={ () => <ProfileContainer/>}/>\n                                    <Route path='/dialogs' render={ () => <DialogsContainer />}/>\n                                    <Route path='/users' render={ () => <UsersContainer />}/>\n                                    <Route path='/news' component={News}/>\n                                    <Route path='/music' component={Music}/>\n                                    <Route path='/settings' component={Settings}/>\n                                    <Route path='/fridends' render={ () => <FriendsContainer />}/>\n                                    <Route path='/login' render={ () => <Login />}/>\n                                    <Route path='*' render={ () => <NotFound404 />}/>\n\n                                    <Redirect from='/' to='/profile'/>\n                                </Switch>\n                            </div>\n                    </div>\n                </div>\n            </Suspense>\n        )};\n    }\n\nconst mapStateToProps =(state)=>({\n    initialized:state.app.initialized\n})\n\nconst AppContainer =compose(\n    withRouter,\n    connect (mapStateToProps,{initializedApp})\n\n)(App)\n\nconst SamuraiJSApp =(props)=>{\n    return(\n        <HashRouter>\n            <React.StrictMode>\n                <Provider store={store}>\n                    <AppContainer />\n                </Provider>\n            </React.StrictMode>\n        </HashRouter>\n    )\n}\n\nexport default SamuraiJSApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n// import App from './App';\n// import {BrowserRouter} from 'react-router-dom';\n// import {Provider} from 'react-redux';\n// import store from './redux/redux-store';\nimport SamuraiJSApp from './App';\n\n\nReactDOM.render(<SamuraiJSApp />,document.getElementById('root'))\n\n    // <BrowserRouter>\n    //     <React.StrictMode>\n    //         <Provider store={store}>\n    //             <App/>\n    //         </Provider>\n    //     </React.StrictMode>\n    // </BrowserRouter>,\n    // document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from 'react';\r\nimport classes from './FormControls.module.css'\r\nimport {required} from '../../../utilite/validator';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nexport const Elements = Elements=>({input,meta,...props})=>{\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={classes.formControl + ' ' + (hasError ?classes.error:'')}>\r\n            <div>\r\n                <Elements className={classes.formConroleIntut} {...input} {...props} />\r\n            </div>\r\n            {hasError && <span className={classes.formErrar}>{meta.error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const creatorNewField= (placeholder,name,validate,component,props,text ='')=> (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validate} component={component}  {...props}/>{text}\r\n\r\n    </div>\r\n    )\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2_Z_j\",\"logo\":\"Header_logo__2--uA\",\"loginBlock\":\"Header_loginBlock__3ggHj\",\"loginAvata\":\"Header_loginAvata__6FEVW\",\"link\":\"Header_link__3HuEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1-RsQ\",\"error\":\"FormControls_error__2R0Zf\",\"formConroleTextarea\":\"FormControls_formConroleTextarea__gYA_z\",\"formConroleIntut\":\"FormControls_formConroleIntut__8sAJI\",\"formErrar\":\"FormControls_formErrar__2mvVs\"};","export const required =(value)=>{\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator =(maxLength)=>(value)=>{\r\n    if(value.length > maxLength) return `Max length ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"FriendsItem_img__11Caa\",\"name\":\"FriendsItem_name__2Io6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__KQUZ_\",\"title\":\"Friends_title__3MlWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__AzWXG\",\"error\":\"Login_error__ui3Ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"das\":\"Preloader_das__1kZBI\",\"lds_roller\":\"Preloader_lds_roller__3DV7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"LoaderComponent_loaderWrapper__3FcZa\",\"lds_facebook\":\"LoaderComponent_lds_facebook__2YvpX\"};","import React from 'react';\r\nimport classes from './Preloader.module.css'\r\n\r\nconst Preloader = ()=>{\r\n    return(\r\n        <div className={classes.das}>\r\n        <div className={classes.lds_roller}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader","import {profileAPI} from '../api/api';\nimport {stopSubmit} from 'redux-form';\n\n\nconst ADD_POST = 'network/profile/ADD-POST';\nconst SET_USERS_PROFILE = 'network/profile/ADD-SET_USERS_PROFILE';\nconst GET_USER_STATUS ='network/profile/GET_USER_STATUS'\nconst DELET_POST ='network/profile/DELET_POST'\nconst SAVE_PHOTO_SUCCESS ='network/profile/SAVE_PHOTO_SUCCESS'\nconst SAVE_PROFILE ='network/profile/SAVE_PROFILE'\n\n\n\nlet initialState = {\n    profile: null,\n    status:'',\n    profileStatusUpdate:null,\n\n    postData: [\n        {\n            massage: 'Hi, how are you?',\n            id: '1',\n            likesCounter: 0,\n            avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png'\n        },\n        {\n            massage: 'How is youre',\n            id: '2',\n            likesCounter: 0,\n            avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-380-456332.png'\n        },\n        {\n            massage: \"It's my fist post \",\n            id: '3',\n            likesCounter: 0 ,\n            avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-367-456319.png'\n        },\n    ]\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST:\n            let body = action.newPostBody\n            return {\n                ...state,\n                postData: [...state.postData, {massage: body, id: '1', likesCounter: 0, avatar: 'https://cdn.iconscout.com/icon/free/png-512/avatar-372-456324.png'}]\n            }\n\n        case SET_USERS_PROFILE:\n            return {...state,profile:action.profile}\n\n        case GET_USER_STATUS:\n            return {...state,status: action.status}\n\n        case DELET_POST:\n            return {...state,postData: state.postData.filter(p=> p.id != action.postId)}\n\n        case SAVE_PHOTO_SUCCESS:\n            return {...state,profile:{...state.profile,photos:action.photo}}\n\n        case SAVE_PROFILE:\n            return {...state,profileStatusUpdate:action.statusUpdate}\n\n\n        default:\n            return state\n    }\n}\nexport const addPost = (newPostBody) => ({type: ADD_POST,newPostBody})\nexport const setUserProfile = (profile) => ({type: SET_USERS_PROFILE,profile})\nexport const setUsersStatus = (status) => ({type: GET_USER_STATUS,status:status})\nexport const deletePost = (postId) =>({type:DELET_POST,postId})\nexport const savePhotoSuccess = (photo) =>({type:SAVE_PHOTO_SUCCESS,photo})\nexport const saveProfileSuccess = (statusUpdate) =>({type:SAVE_PROFILE,statusUpdate})\n\nexport const getUserProfile =(userId) => async(dispatch) =>{\n   let response = await profileAPI.getProfile(userId)\n        dispatch(setUserProfile(response.data))\n}\n\nexport const getUsersStatus =(userId) => async(dispatch)=>{\n    let response = await profileAPI.getStatus(userId)\n        dispatch(setUsersStatus(response.data))\n}\n\nexport const updateUsersStatus =(status)=> async(dispatch)=>{\n    let response = await profileAPI.updataStatus(status)\n        if (response.data.resultCode===0){\n            dispatch(setUsersStatus(status))\n        }\n}\n\nexport const savePhoto =(photo)=> async(dispatch)=>{\n    let response = await profileAPI.savePhoto(photo)\n        if (response.data.resultCode===0){\n            dispatch(savePhotoSuccess(response.data.data.photos))\n        }\n}\n\nexport const saveProfile =(formData)=> async(dispatch,getState)=>{\n    const userId = getState().auth.id\n    let response = await profileAPI.saveProfile(formData)\n        if (response.data.resultCode===0){\n\n            dispatch(getUserProfile(userId))\n            dispatch(saveProfileSuccess('success'))\n            dispatch(saveProfileSuccess(null))\n        }else {\n            dispatch(stopSubmit('ProfileEditForm',{_error:response.data.messages[0]}))\n            return Promise.reject(response.data.messages[0])\n        }\n}\n\n\nexport default profileReducer\n"],"sourceRoot":""}